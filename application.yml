company:
  contact:
    name: "AssetMark"
    url: "https://www.assetmark.com/"
    email: "eservice@assetmark.com"
  license: "Â© 2022 Copyright AssetMark, Inc. All rights reserved."
  termsOfService:
    url: "https://www.assetmark.com/terms-and-conditions?hsLang=en"
    
######### LOG CONFIG ############    
logging:
  level:
    ROOT: ERROR
    org:
      springframework.web: ERROR
      hibernate:
        type.descriptor.sql: INFO
        SQL: INFO         
      apache:
        kafka: ERROR
    com:
      assetmark: INFO
   
spring:
  main.banner-mode: "off"
  output.ansi.enabled: ALWAYS
  zipkin:
    base-url: http://zipkin-service:9411
    enabled: false
    sender.type: web
    locator:
      discovery:
        enabled: false
  sleuth:
    enabled: false
    sampler:
      probability: 1.0
  date-time:
    format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
    zone: UTC    
  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSZ
    default-property-inclusion: NON_NULL
    time-zone: UTC
  lifecycle:
    timeout-per-shutdown-phase: 1m
    
  cloud:
    kubernetes:
      enabled: false
      discovery.enabled: false
    stream:
      kafka:
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        binder:
          brokers: ${KAFKA_URI}    #:192.168.75.98:29092
          headers: type
        #   replicationFactor: 3
          requiredAcks: all
          replicationFactor: ${replication_factor:1}
          autoCreateTopics: true
          autoAddPartitions: true
          configuration:
            retries: 1
            batch.size: 16384
            linger.ms: 1
            enable.idempotence: true
            buffer.memory: 33554432
            request.timeout.ms: 3000
            transaction.timeout.ms: 3000
            max.block.ms: ${kafka_max_block_time:5000}
            max.poll.records: 80
            poll.timeout: 10000
            commit.retries: 1
            commit.retry.interval: 1000
            session.timeout.ms.config: 50000
            shutdown.signal: INT,TERM
            acks: "all"          
            "compression.type": "snappy"
            "receive.buffer.bytes": 16000000
            "socket.receive.buffer.bytes": 16000000
            "num.replica.fetchers": 3
            "replica.socket.receive.buffer.bytes": 16000000
            "fetch.max.wait.ms": 60
            "fetch.min.bytes": 128000
            auto.offset.reset: earliest
      default:
        producer:
        #   partitioned: true
        #   partitionKeyExpression: headers['traceId']
          errorChannelEnabled: true
          headerMode: headers
        consumer:
          partitioned: true
          maxAttempts: 1
          defaultRetryable: false
          headerMode: headers
          autoCommitOffset: true
          autoCommitOnError: true
      
  ################### Hibernate Configuration ##########################
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL81Dialect
        jdbc:
          lob:
            non_contextual_creation: true
          fetch_size: 100
          batch_size: 10
          batch_versioned_data: true
        format_sql: false
        show_sql: false
        order_inserts: true
        order_updates: true
    hibernate:
      ddl-auto: update
    show-sql: false
    generate-ddl: true
    open-in-view: false

###### EUREKA CONFIG #######
eureka:
  instance:
    preferIpAddress: true
    hostname: discovery-service
    metadataMap:
      "prometheus.scrape": "true"
      "prometheus.path": "/actuator/prometheus"
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://discovery-server:9010/eureka}
      
######### ACTUATOR CONFIG ##########      
management:
  info.git.mode: full
  endpoints:
    web:
      exposure:
        include: 
          ['configprops', 'env', 'gateway', 'health', 'info', 'logfile', 'loggers', 'prometheus', 'threaddump']
  endpoint:
    info:
      enabled: true
    shutdown:
      enabled: false
    restart:
      enabled: true 
    health:
      probes:
        enabled: true
      show-details: always
  health:
    probes:
      enabled: true
    binders:
      enabled: true
    redis:
      enabled: true
    mongo:
      enabled: true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true
server:
  shutdown:
    GRACEFUL
    
###### API DOC  ########    
springdoc:
  version: '@springdoc.version@'
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    path: /docs.html
    displayRequestDuration: true
    tagsSorter: alpha
    display-query-params-without-oauth2: true
  cache:
    disabled: true
  oAuthFlow:
    authorizationUrl: http://20.75.210.122/auth/realms/assetmark-dev/protocol/openid-connect/auth
    tokenUrl: http://20.75.210.122/auth/realms/assetmark-dev/protocol/openid-connect/token
    use-pkce-with-authorization-code-grant: false
    
    
---
###### Custodian Details ########    
account:
  details:
    custodians:
      - id: 1
        name: AssetMark Trust
        description: AssetMark Trust
        order: 1
      - id: 2
        name: Fidelity
        description: Fidelity
        order: 2
      - id: 3
        name: Pershing
        description: Pershing
        order: 3
      - id: 4
        name: TD Ameritrade
        description: TD Ameritrade
        order: 4
      - id: 5
        name: Schwab
        description: Charles Schwab
        order: 5
    
# ---
# spring:
#   config:
#     activate:
#       on-cloud-platform: kubernetes
#   cloud:
#     kubernetes:
#       enabled: true

# eureka:
#   client:
#     enabled: false
